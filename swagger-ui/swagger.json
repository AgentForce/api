{
  "swagger": "2.0",
  "host": "apimanulife.herokuapp.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "info": {
    "title": "Manulife Api",
    "version": "1.0",
    "description": "Manulife Api Documentation                                [document api                              ](https://1drv.ms/w/s!AqHtODf7o0eageFb46YAIgIQwy0dEw)"
  },
  "tags": [
    {
      "name": "leads",
      "description": "leads."
    },
    {
      "name": "users",
      "description": "users."
    }
  ],
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "paths": {
    "/campaigns/{id}": {
      "get": {
        "summary": "Get campaign by campaignid.",
        "operationId": "getCampaignsId",
        "parameters": [
          {
            "type": "number",
            "description": "campaignid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/dashboard/{userid}": {
      "get": {
        "summary": "Dashboard",
        "operationId": "getDashboardUserid",
        "parameters": [
          {
            "type": "number",
            "description": "userid",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign .",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/types/{type}": {
      "get": {
        "summary": "Get types by type (Api support)",
        "operationId": "getTypesType",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "types"
        ],
        "responses": {
          "200": {
            "description": "types founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "types not found."
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "summary": "Get user by username.",
        "operationId": "getUsersUsername",
        "parameters": [
          {
            "type": "string",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User founded.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Please login."
          }
        }
      }
    },
    "/campaigns/userid/{userid}": {
      "get": {
        "summary": "Get all campaigns of 1 userid",
        "operationId": "getCampaignsUseridUserid",
        "parameters": [
          {
            "type": "string",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/leads/detail/{id}": {
      "get": {
        "summary": "find detail a lead with list activities",
        "operationId": "getLeadsDetailId",
        "parameters": [
          {
            "type": "number",
            "description": "leadid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lead found",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "lead not found"
          }
        }
      }
    },
    "/campaigns/{id}/customers/{type}": {
      "get": {
        "summary": "Get Customer(leads) in a campaigns by id.",
        "operationId": "getCampaignsIdCustomersType",
        "parameters": [
          {
            "type": "number",
            "description": "Campaignid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "4 processtep in lead",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign .",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/activities": {
      "post": {
        "summary": "Create a activity.",
        "operationId": "postActivities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 1"
            }
          }
        ],
        "tags": [
          "activities"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "201": {
            "description": "activity created."
          }
        }
      }
    },
    "/authen": {
      "post": {
        "summary": "Create account for access resource",
        "operationId": "postAuthen",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 2"
            }
          }
        ],
        "tags": [
          "authen"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/campaigns": {
      "post": {
        "summary": "Create a campaign.",
        "operationId": "postCampaigns",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 3"
            }
          }
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created campaign.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/leads": {
      "post": {
        "summary": "Create a lead",
        "operationId": "postLeads",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 4"
            }
          }
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created lead.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/types": {
      "post": {
        "summary": "create metatype (Api support)",
        "operationId": "postTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 5"
            }
          }
        ],
        "tags": [
          "types"
        ],
        "responses": {
          "200": {
            "description": "types founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "types not found."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a user of manulife",
        "operationId": "postUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 6"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/authen/login": {
      "post": {
        "summary": "Authentication.",
        "operationId": "postAuthenLogin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 7"
            }
          }
        ],
        "tags": [
          "authen"
        ],
        "responses": {
          "200": {
            "description": "logged in.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user.",
        "operationId": "postUsersLogin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 8"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User logged in.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/resetpassword": {
      "post": {
        "summary": "send email(Just test, please dont try)",
        "operationId": "postUsersResetpassword",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 9"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User founded.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Please login."
          }
        }
      }
    },
    "/users/changepassword/{username}": {
      "post": {
        "summary": "Change password",
        "operationId": "postUsersChangepasswordUsername",
        "parameters": [
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 10"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "change password success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "put": {
        "summary": "Update a activity",
        "operationId": "putActivitiesId",
        "parameters": [
          {
            "type": "number",
            "description": "acitivityId",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 11"
            }
          }
        ],
        "tags": [
          "activities"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated info.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "User does not have authorization."
          }
        }
      }
    },
    "/leads/{id}": {
      "put": {
        "summary": "update a leads",
        "operationId": "putLeadsId",
        "parameters": [
          {
            "type": "number",
            "description": "leadid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 12"
            }
          }
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lead updated",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/profile": {
      "put": {
        "summary": "Update user profile.",
        "operationId": "putUsersProfile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model 13"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated info.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "User does not have authorization."
          }
        }
      }
    }
  },
  "definitions": {
    "Model 1": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "number"
        },
        "CampId": {
          "type": "number"
        },
        "LeadId": {
          "type": "number"
        },
        "Type": {
          "type": "number",
          "example": 1,
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Location": {
          "type": "string"
        },
        "StartDate": {
          "type": "string",
          "format": "date",
          "example": "2017-11-11",
          "default": "2017-11-11"
        },
        "EndDate": {
          "type": "string",
          "format": "date",
          "example": "2017-11-12",
          "default": "2017-11-12"
        },
        "Description": {
          "type": "string"
        },
        "FullDate": {
          "type": "boolean",
          "description": "false=waiting, true=done"
        },
        "Notification": {
          "type": "number",
          "description": "minutes popup alert before activity happen"
        }
      },
      "required": [
        "UserId",
        "CampId",
        "LeadId",
        "StartDate",
        "EndDate",
        "FullDate",
        "Notification"
      ]
    },
    "Model 2": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string",
          "example": "tunguyene@gmail.com",
          "default": "tunguyene@gmail.com",
          "x-format": {
            "email": true
          },
          "x-convert": {
            "trim": true
          }
        },
        "FullName": {
          "type": "string",
          "example": "Tu Nguyen",
          "default": "Tu Nguyen"
        },
        "Password": {
          "type": "string",
          "example": "123456",
          "x-convert": {
            "trim": true
          }
        }
      },
      "required": [
        "Email",
        "FullName",
        "Password"
      ]
    },
    "Model 3": {
      "type": "object",
      "properties": {
        "CampType": {
          "type": "number",
          "description": "metatypes: type=camp-camptype",
          "default": 1
        },
        "Name": {
          "type": "string"
        },
        "Label": {
          "type": "string",
          "enum": [
            "fc",
            "fa"
          ]
        },
        "Experience": {
          "type": "string",
          "enum": [
            "old",
            "new"
          ]
        },
        "UserId": {
          "type": "number"
        },
        "StartDate": {
          "type": "string",
          "format": "date",
          "example": "2017-11-12",
          "default": "2017-11-12"
        },
        "CaseSize": {
          "type": "number",
          "minimum": 1
        },
        "IncomeMonthly": {
          "type": "number",
          "minimum": 1
        },
        "CommissionRate": {
          "type": "number",
          "minimum": 1
        }
      },
      "required": [
        "CampType",
        "Name",
        "Label",
        "Experience",
        "UserId",
        "StartDate",
        "CaseSize",
        "IncomeMonthly",
        "CommissionRate"
      ]
    },
    "Model 4": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "number",
          "description": "user id"
        },
        "CampId": {
          "type": "number",
          "description": "Campaign id"
        },
        "Phone": {
          "type": "string",
          "description": "number phone of customer",
          "pattern": "/^[0-9]*$/"
        },
        "Name": {
          "type": "string",
          "description": "Full name"
        },
        "Age": {
          "type": "number",
          "description": "Get info from api /types, key=age",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Gender": {
          "type": "number",
          "description": "Gender of customer. 0 = male, 1 = female",
          "enum": [
            0,
            1
          ]
        },
        "IncomeMonthly": {
          "type": "number",
          "description": "Get info from api /types, key=IncomeMonthly",
          "default": 1,
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Type": {
          "type": "number",
          "description": "4 type of activity",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "MaritalStatus": {
          "type": "number",
          "description": "Get info from api /types, key=MaritalStatus",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Address": {
          "type": "string",
          "maxLength": 500
        },
        "City": {
          "type": "number",
          "description": "Get info from api /types, key=city"
        },
        "District": {
          "type": "number",
          "description": "Get info from api /types, key=district"
        },
        "Relationship": {
          "type": "number",
          "description": "Get info from api /types, key=Relationship"
        },
        "Source": {
          "type": "number",
          "description": "Get info from api /types, key=Source"
        },
        "Job": {
          "type": "string"
        },
        "LeadType": {
          "type": "number",
          "description": "Get info from api /types, key=LeadType"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        }
      },
      "required": [
        "UserId",
        "CampId",
        "Phone",
        "Age",
        "Gender",
        "IncomeMonthly",
        "Type",
        "MaritalStatus",
        "City",
        "District",
        "Relationship",
        "Source",
        "LeadType"
      ]
    },
    "Model 5": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "x-convert": {
            "lowercase": true
          }
        },
        "Key": {
          "type": "number"
        },
        "Value": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Key",
        "Value"
      ]
    },
    "Model 6": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string",
          "example": "tunguyene@gmail.com",
          "default": "tunguyene@gmail.com",
          "x-format": {
            "email": true
          },
          "x-convert": {
            "trim": true
          }
        },
        "FullName": {
          "type": "string",
          "example": "Tu Nguyen",
          "default": "Tu Nguyen"
        },
        "Password": {
          "type": "string",
          "example": "123456",
          "x-convert": {
            "trim": true
          }
        },
        "Phone": {
          "type": "string",
          "example": "01693248887",
          "default": "01693248887",
          "pattern": "/[0-9]/"
        },
        "UserName": {
          "type": "string"
        },
        "Gender": {
          "type": "number",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        "Birthday": {
          "type": "string",
          "format": "date",
          "description": "yyyy-mm-dd",
          "example": "1993-11-12",
          "default": "1993-11-12"
        },
        "GroupId": {
          "type": "number",
          "example": 2,
          "default": 2
        },
        "Address": {
          "type": "string",
          "maxLength": 255
        },
        "City": {
          "type": "integer",
          "description": "metatypes: type=city",
          "example": 1,
          "default": 1
        },
        "District": {
          "type": "integer",
          "description": "metatypes: type=district",
          "example": 1,
          "default": 1
        },
        "Manager": {
          "type": "string",
          "description": "username of manager: null if empty"
        }
      },
      "required": [
        "Email",
        "FullName",
        "Password",
        "Phone",
        "UserName",
        "Gender",
        "Birthday",
        "GroupId",
        "Address"
      ]
    },
    "Model 7": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "Password": {
          "type": "string",
          "x-convert": {
            "trim": true
          }
        }
      },
      "required": [
        "Email",
        "Password"
      ]
    },
    "Model 8": {
      "type": "object",
      "properties": {
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string",
          "x-convert": {
            "trim": true
          }
        }
      },
      "required": [
        "Username",
        "Password"
      ]
    },
    "Model 9": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string",
          "default": "tunguyenq@gmail.com",
          "x-format": {
            "email": true
          }
        }
      },
      "required": [
        "Email"
      ]
    },
    "Model 10": {
      "type": "object",
      "properties": {
        "OldPassword": {
          "type": "string",
          "x-convert": {
            "trim": true
          }
        },
        "NewPassword": {
          "type": "string",
          "x-convert": {
            "trim": true
          }
        }
      },
      "required": [
        "OldPassword",
        "NewPassword"
      ]
    },
    "Model 11": {
      "type": "object",
      "properties": {
        "CampId": {
          "type": "number"
        },
        "Location": {
          "type": "string"
        },
        "StartDate": {
          "type": "string",
          "format": "date",
          "example": "2017-11-11",
          "default": "2017-11-11"
        },
        "EndDate": {
          "type": "string",
          "format": "date",
          "example": "2017-11-12",
          "default": "2017-11-12"
        },
        "Description": {
          "type": "string"
        },
        "FullDate": {
          "type": "boolean",
          "description": "false=waiting, true=done"
        },
        "Status": {
          "type": "number",
          "description": "1=done, 0=wating",
          "example": 1,
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        "Notification": {
          "type": "number",
          "description": "minutes popup alert before activity happen"
        }
      },
      "required": [
        "CampId",
        "StartDate",
        "EndDate",
        "FullDate",
        "Notification"
      ]
    },
    "Model 12": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Full name",
          "default": "Phuong Thao"
        },
        "Age": {
          "type": "number",
          "description": "Get info from api /types, key=age",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Gender": {
          "type": "number",
          "description": "Gender of customer. 0 = male, 1 = female",
          "enum": [
            0,
            1
          ]
        },
        "IncomeMonthly": {
          "type": "number",
          "description": "Get info from api /types, key=IncomeMonthly",
          "default": 1,
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "MaritalStatus": {
          "type": "number",
          "description": "Get info from api /types, key=MaritalStatus",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "Address": {
          "type": "string",
          "maxLength": 500
        },
        "City": {
          "type": "number",
          "description": "Get info from api /types, key=city"
        },
        "Type": {
          "type": "number",
          "description": "4 type of activity",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "District": {
          "type": "number",
          "description": "Get info from api /types, key=district"
        },
        "Relationship": {
          "type": "number",
          "description": "Get info from api /types, key=Relationship"
        },
        "Source": {
          "type": "number",
          "description": "Get info from api /types, key=Source"
        },
        "Job": {
          "type": "string"
        },
        "LeadType": {
          "type": "number",
          "description": "Get info from api /types, key=LeadType"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        }
      },
      "required": [
        "Age",
        "Gender",
        "IncomeMonthly",
        "MaritalStatus",
        "City",
        "Type",
        "District",
        "Relationship",
        "Source",
        "LeadType"
      ]
    },
    "Model 13": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string",
          "example": "tunguyene@gmail.com",
          "default": "tunguyene@gmail.com",
          "x-format": {
            "email": true
          },
          "x-convert": {
            "trim": true
          }
        },
        "FullName": {
          "type": "string"
        },
        "Phone": {
          "type": "string",
          "example": "01693248887",
          "default": "01693248887",
          "pattern": "/[0-9]/"
        },
        "UserName": {
          "type": "string"
        },
        "Birthday": {
          "type": "string",
          "format": "date",
          "description": "yyyy-mm-dd",
          "example": "1993-11-12",
          "default": "1993-11-12"
        },
        "GroupId": {
          "type": "number",
          "example": 2,
          "default": 2,
          "enum": [
            2
          ]
        },
        "Address": {
          "type": "string",
          "maxLength": 255
        },
        "City": {
          "type": "integer",
          "description": "metatypes: type=city"
        },
        "District": {
          "type": "integer",
          "description": "metatypes: type=district"
        }
      },
      "required": [
        "Email",
        "FullName",
        "Phone",
        "UserName",
        "Birthday",
        "GroupId",
        "Address"
      ]
    }
  }
}