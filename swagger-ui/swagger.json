{
  "swagger": "2.0",
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "info": {
    "title": "Manulife Api",
    "version": "1.0",
    "description": "Manulife Api Documentation                                [link document api google doc                                ](https://docs.google.com/document/d/12GxLBgiOhIdsZm5nliNah8dVtxxNb06LEr0wEYwmxjg/edit)"
  },
  "tags": [
    {
      "name": "leads",
      "description": "leads."
    },
    {
      "name": "users",
      "description": "users."
    }
  ],
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "paths": {
    "/campaigns/{id}": {
      "get": {
        "summary": "Get campaign by campaignid.",
        "operationId": "getCampaignsId",
        "parameters": [
          {
            "type": "number",
            "description": "campaignid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/dashboard/{userid}": {
      "get": {
        "summary": "Dashboard",
        "operationId": "getDashboardUserid",
        "parameters": [
          {
            "type": "number",
            "description": "userid",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign .",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/types/{type}": {
      "get": {
        "summary": "Get types by type (Api support)",
        "operationId": "getTypesType",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "types"
        ],
        "responses": {
          "200": {
            "description": "types founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "types not found."
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "summary": "Get user by username.",
        "operationId": "getUsersUsername",
        "parameters": [
          {
            "type": "string",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User founded.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Please login."
          }
        }
      }
    },
    "/campaigns/userid/{userid}": {
      "get": {
        "summary": "Get all campaigns of 1 userid",
        "operationId": "getCampaignsUseridUserid",
        "parameters": [
          {
            "type": "string",
            "name": "userid",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/leads/detail/{id}": {
      "get": {
        "summary": "find detail a lead with list activities",
        "operationId": "getLeadsDetailId",
        "parameters": [
          {
            "type": "number",
            "description": "leadid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lead found",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "lead not found"
          }
        }
      }
    },
    "/campaigns/{id}/customers/{type}": {
      "get": {
        "summary": "Get Customer(leads) in a campaigns by id.",
        "operationId": "getCampaignsIdCustomersType",
        "parameters": [
          {
            "type": "number",
            "description": "Campaignid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "4 processtep in lead",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign .",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Campaign does not exists."
          }
        }
      }
    },
    "/activities": {
      "post": {
        "summary": "Create a activity.",
        "operationId": "postActivities",
        "parameters": [
          {
            "type": "number",
            "name": "UserId",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "name": "CampId",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "name": "LeadId",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "Type",
            "in": "formData"
          },
          {
            "type": "string",
            "name": "Location",
            "in": "formData"
          },
          {
            "type": "string",
            "format": "date",
            "default": "2017-11-11",
            "name": "StartDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "default": "2017-11-12",
            "name": "EndDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Description",
            "in": "formData"
          },
          {
            "type": "boolean",
            "description": "false=waiting, true=done",
            "name": "FullDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "minutes popup alert before activity happen",
            "name": "Notification",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "activities"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "201": {
            "description": "activity created."
          }
        }
      }
    },
    "/authen": {
      "post": {
        "summary": "Create account for access resource",
        "operationId": "postAuthen",
        "parameters": [
          {
            "type": "string",
            "default": "tunguyene@gmail.com",
            "x-format": {
              "email": true
            },
            "x-convert": {
              "trim": true
            },
            "name": "Email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "default": "Tu Nguyen",
            "name": "FullName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "Password",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "authen"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/campaigns": {
      "post": {
        "summary": "Create a campaign.",
        "operationId": "postCampaigns",
        "parameters": [
          {
            "type": "number",
            "description": "metatypes: type=camp-camptype",
            "default": 1,
            "name": "CampType",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "enum": [
              "fc",
              "fa"
            ],
            "name": "Label",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "enum": [
              "old",
              "new"
            ],
            "name": "Experience",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "name": "UserId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "default": "2017-11-12",
            "name": "StartDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "CaseSize",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "IncomeMonthly",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "CommissionRate",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "campaigns"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created campaign.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/leads": {
      "post": {
        "summary": "Create a lead",
        "operationId": "postLeads",
        "parameters": [
          {
            "type": "number",
            "description": "user id",
            "name": "UserId",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Campaign id",
            "name": "CampId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "number phone of customer",
            "pattern": "/^[0-9]*$/",
            "name": "Phone",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Full name",
            "name": "Name",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=age",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "Age",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Gender of customer. 0 = male, 1 = female",
            "enum": [
              0,
              1
            ],
            "name": "Gender",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=IncomeMonthly",
            "default": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "IncomeMonthly",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "4 type of activity",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "Type",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=MaritalStatus",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "MaritalStatus",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 500,
            "name": "Address",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=city",
            "name": "City",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=district",
            "name": "District",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=Relationship",
            "name": "Relationship",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=Source",
            "name": "Source",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Job",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=LeadType",
            "name": "LeadType",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 500,
            "name": "Description",
            "in": "formData"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created lead.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/types": {
      "post": {
        "summary": "create metatype (Api support)",
        "operationId": "postTypes",
        "parameters": [
          {
            "type": "string",
            "x-convert": {
              "lowercase": true
            },
            "name": "Type",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "name": "Key",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Value",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Description",
            "in": "formData"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "types"
        ],
        "responses": {
          "200": {
            "description": "types founded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "types not found."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a user of manulife",
        "operationId": "postUsers",
        "parameters": [
          {
            "type": "string",
            "default": "tunguyene@gmail.com",
            "x-format": {
              "email": true
            },
            "x-convert": {
              "trim": true
            },
            "name": "Email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "default": "Tu Nguyen",
            "name": "FullName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "Password",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "default": "01693248887",
            "pattern": "/[0-9]/",
            "name": "Phone",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "UserName",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "default": 0,
            "enum": [
              0,
              1
            ],
            "name": "Gender",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "yyyy-mm-dd",
            "default": "1993-11-12",
            "name": "Birthday",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "default": 2,
            "name": "GroupId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 255,
            "name": "Address",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "metatypes: type=city",
            "default": 1,
            "name": "City",
            "in": "formData"
          },
          {
            "type": "integer",
            "description": "metatypes: type=district",
            "default": 1,
            "name": "District",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "username of manager: null if empty",
            "name": "Manager",
            "in": "formData"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/authen/login": {
      "post": {
        "summary": "Authentication.",
        "operationId": "postAuthenLogin",
        "parameters": [
          {
            "type": "string",
            "name": "Email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "Password",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "authen"
        ],
        "responses": {
          "200": {
            "description": "logged in.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user.",
        "operationId": "postUsersLogin",
        "parameters": [
          {
            "type": "string",
            "name": "Username",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "Password",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User logged in.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/resetpassword": {
      "post": {
        "summary": "send email(Just test, please dont try)",
        "operationId": "postUsersResetpassword",
        "parameters": [
          {
            "type": "string",
            "default": "tunguyenq@gmail.com",
            "x-format": {
              "email": true
            },
            "name": "Email",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User founded.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Please login."
          }
        }
      }
    },
    "/users/changepassword/{username}": {
      "post": {
        "summary": "Change password",
        "operationId": "postUsersChangepasswordUsername",
        "parameters": [
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "OldPassword",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "x-convert": {
              "trim": true
            },
            "name": "NewPassword",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "change password success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "put": {
        "summary": "Update a activity",
        "operationId": "putActivitiesId",
        "parameters": [
          {
            "type": "number",
            "description": "acitivityId",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "CampId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Location",
            "in": "formData"
          },
          {
            "type": "string",
            "format": "date",
            "default": "2017-11-11",
            "name": "StartDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "default": "2017-11-12",
            "name": "EndDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Description",
            "in": "formData"
          },
          {
            "type": "boolean",
            "description": "false=waiting, true=done",
            "name": "FullDate",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "1=done, 0=wating",
            "default": 0,
            "enum": [
              0,
              1
            ],
            "name": "Status",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "minutes popup alert before activity happen",
            "name": "Notification",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "activities"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated info.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "User does not have authorization."
          }
        }
      }
    },
    "/leads/{id}": {
      "put": {
        "summary": "update a leads",
        "operationId": "putLeadsId",
        "parameters": [
          {
            "type": "number",
            "description": "leadid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Full name",
            "default": "Phuong Thao",
            "name": "Name",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=age",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "Age",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Gender of customer. 0 = male, 1 = female",
            "enum": [
              0,
              1
            ],
            "name": "Gender",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=IncomeMonthly",
            "default": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "IncomeMonthly",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=MaritalStatus",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "MaritalStatus",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 500,
            "name": "Address",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=city",
            "name": "City",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "4 type of activity",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "name": "Type",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=district",
            "name": "District",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=Relationship",
            "name": "Relationship",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=Source",
            "name": "Source",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "Job",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "Get info from api /types, key=LeadType",
            "name": "LeadType",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 500,
            "name": "Description",
            "in": "formData"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "leads"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lead updated",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/profile": {
      "put": {
        "summary": "Update user profile.",
        "operationId": "putUsersProfile",
        "parameters": [
          {
            "type": "string",
            "default": "tunguyene@gmail.com",
            "x-format": {
              "email": true
            },
            "x-convert": {
              "trim": true
            },
            "name": "Email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "FullName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "default": "01693248887",
            "pattern": "/[0-9]/",
            "name": "Phone",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "UserName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "yyyy-mm-dd",
            "default": "1993-11-12",
            "name": "Birthday",
            "in": "formData",
            "required": true
          },
          {
            "type": "number",
            "default": 2,
            "enum": [
              2
            ],
            "name": "GroupId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "maxLength": 255,
            "name": "Address",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "metatypes: type=city",
            "name": "City",
            "in": "formData"
          },
          {
            "type": "integer",
            "description": "metatypes: type=district",
            "name": "District",
            "in": "formData"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated info.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "User does not have authorization."
          }
        }
      }
    }
  },
  "definitions": {}
}